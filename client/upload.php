<?php
ini_set('display_errors', 1);
$target_dir = "uploads/";
$target_file = $target_dir . "fileindex";
$uploadOk = 1;
$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));



// Check file size
if ($_FILES["fileToUpload"]["size"] > 50000000) {
  echo "Sorry, your file is too large.";
  $uploadOk = 0;
}

 

// Check if $uploadOk is set to 0 by an error
if ($uploadOk == 0) {
  echo "Sorry, your file was not uploaded.";
// if everything is ok, try to upload file
} else {
  if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
    echo "Il file ". htmlspecialchars( basename( $_FILES["fileToUpload"]["name"])). " è stato caricato correttamente.";
  } else {
    echo "ERRORE";
  }
}



shell_exec("floss uploads/fileindex > uploads/fileindex.txt");
$sharedPrime = 130855555559774444; //p, prime number
$sharedBase = 6; //g, prime number
$aliceSecret = rand(8, 16); //a
$alicePublicKey = bcmod(bcpow($sharedBase, $aliceSecret), $sharedPrime);
error_reporting(E_ALL);

// Settaggio variabili client
$host = "192.168.1.17";
$port = 5000;


// crea socket
$socket = socket_create(AF_INET, SOCK_STREAM, 0);// or echo "Socket non creato\n";
// connettiti al server
$result = socket_connect($socket, $host, $port); //or echo "Impossibile connettersi al server\n";
// invia stringa al server

socket_write($socket, $alicePublicKey, strlen($alicePublicKey)); //or echo "Impossibile inviare i dati al server\n";
// restituisci risposta del server
$result = socket_read ($socket, 1024); //or echo "Impossibile leggere la risposta del server\n";
//echo "Risposta del Server :";
//echo $result;

//$a = substr_replace($result ,"", -1);

$alicePrivateKey = bcmod(bcpow($result, $aliceSecret), $sharedPrime);

//echo $alicePrivateKey;
$file = 'mk1.txt';
// Write the contents back to the file
file_put_contents($file, $alicePrivateKey);

$command = escapeshellcmd(' python build_index.py');
$output = shell_exec($command);
//echo $output;
//chiudi socket
socket_close($socket);
sleep(2);

$host2 = "192.168.1.17";
$port2 = 5001;
$myfile = fopen("file.obj", "r");

// crea socket
$socket2 = socket_create(AF_INET, SOCK_STREAM, 0); //or echo "Socket non creato\n";
// connettiti al server
$result2 = socket_connect($socket2, $host2, $port2); //or echo "Impossibile connettersi al server\n";
// invia stringa al server
while(($line = fread($myfile,1000))){
	socket_write($socket2, $line); //or echo "Impossibile inviare i dati al server\n";
	//echo $line;
	
}

// restituisci risposta del server
//$result = socket_read ($socket, 1024) or die("Impossibile leggere la risposta del server\n");
//echo "Risposta del Server :";
//echo $result;

//$a = substr_replace($result ,"", -1);

socket_close($socket2);

/* INIZIO ULTIMA CONNESSIONE
*
*
*
*
*/

set_time_limit(0);

/* Abilita lo scarico dell'output così si è in grado di vedere cosa passa
 * non appena arrivano i dati al server. */
ob_implicit_flush();
$host3 = "192.168.1.17";
$port3 = 5003;
// setta timeout!

// crea socket
set_time_limit(1110);
$socket3 = socket_create(AF_INET, SOCK_STREAM, 0); //or echo "Creazione socket fallita\n" ;
// Lega il socket alla porta $port sul server $host 
$result3 = socket_bind($socket3, $host3, $port3); //or  echo "Fallito inizializzazione porta su socket\n" ;
// Inizio ascolto sulla connessione
$result3 = socket_listen($socket3, 3); //or  echo "Start ascolto socket fallito\n" ;
// Accetta Connessioni
// Attende l'arrivo di una connessione client
$spawn3 = socket_accept($socket3); //or echo "Inizializzazione connessione con client fallita\n";
// Legge Client input
$input = socket_read($spawn3, 1024); //or echo "Errore Non riesco a leggere l'input\n" ;
if( $input == "")
echo "<html>

<head>
<link rel='stylesheet' href='style.css'>
  
</head>
<body>
<h1>Scansione terminata!</h1>
<h2> Nessun malware rilevato</h2>
 

</body>
</html>";
else
echo "<html>

<head>
<link rel='stylesheet' href='style.css'>
  
</head>
<body>
<h1>Scansione terminata!</h1>
<h2> Nome del malware: $input</h2>
 

</body>
</html>";
//echo "Malware rilevato! \n";
//echo "<h2> Nome del malware: </h2>";
//echo "<h2>$input</h2>";

socket_close($spawn3);
socket_close($socket3);
//$command2 = escapeshellcmd(' strings uploads/fileindex.txt > fileindex2.txt');
 
?>
