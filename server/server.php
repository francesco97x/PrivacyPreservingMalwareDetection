<?php
ini_set('display_errors', 1);
$sharedPrime = 130855555559774444; //p, prime number
$sharedBase = 6; //g, prime number
$bobSecret = rand(8, 16); //b
$bobPublicKey = bcmod(bcpow($sharedBase, $bobSecret), $sharedPrime);
error_reporting(E_ALL);

/* Si indica allo script di non uscire mentre attende una connessione */
set_time_limit(0);
/* Abilita lo scarico dell'output così si è in grado di vedere cosa passa
 * non appena arrivano i dati al server. */
ob_implicit_flush();

// settaggio variabili, il server ascolta sul proprio indirizzo ip  
$host = "192.168.1.17";
$port = 5000;
// setta timeout!

// crea socket
$socket = socket_create(AF_INET, SOCK_STREAM, 0); //or die("Creazione socket fallita\n");
// Lega il socket alla porta $port sul server $host 
$result = socket_bind($socket, $host, $port); // or die("Fallito inizializzazione porta su socket\n");
// Inizio ascolto sulla connessione
echo "prima dell'ascolto";
$result = socket_listen($socket, 3); //or die("Start ascolto socket fallito\n");
echo "dopo l'ascolto";
// Accetta Connessioni
// Attende l'arrivo di una connessione client
$spawn = socket_accept($socket); // or die("Inizializzazione connessione con client fallita\n");
// Legge Client input
$input = socket_read($spawn, 1024); //or die("Errore Non riesco a leggere l'input\n");

//$a = substr_replace($input ,"", -1);

$bobPrivateKey = bcmod(bcpow($input, $bobSecret),$sharedPrime);
//echo $bobPrivateKey;
$file = 'mk2.txt';
file_put_contents($file, $bobPrivateKey);

socket_write($spawn, $bobPublicKey, strlen ($bobPublicKey)); // or die("Errore di scrittura su output\n");

$command = escapeshellcmd('python trapdoor.py');
$output = shell_exec($command);
#echo $output;
sleep(1);
//Chiudi sockets
socket_close($spawn);
socket_close($socket);
$command = escapeshellcmd(' php client2.php');
$output = shell_exec($command);

 ?>
