import os
import pickle
from Crypto.Cipher import AES
from Crypto.Hash import MD5
count = 0
count2 = 0
count3 = 0
import time
final_search = []
filehandler = open('/opt/lampp/htdocs/cloud/file.obj', 'r')
bloomf = pickle.load(filehandler)
f = open("aaa.txt", "r")
content = f.readlines()

def search_index(trapdoor):
    search_result = []
    
    #print trapdoor.encode("hex")
    
    if bloomf.check(trapdoor.encode("hex")):
        search_result.append("ss")
	final_search.append(search_result)

    return search_result

if __name__ == "__main__":

   
    start_time = time.time()
    for subdirectories in os.listdir('/opt/lampp/htdocs/cloud/trapdoors/'):
	for filename in os.listdir('/opt/lampp/htdocs/cloud/trapdoors/' + str(count)):
		with open(os.path.join('/opt/lampp/htdocs/cloud/trapdoors/' + str(count), filename)) as f:
			count2 +=1
			keyword_trapdoor = f.read()
	 		search_result = search_index(keyword_trapdoor)
	occurrencies = str(final_search).count(',') +1
	#print(occurrencies, count2)
	count3 +=1
	count +=1 
	if occurrencies >= count2/2  and count2!=0 and occurrencies!=1:
		print("VIRUS FOUND!", occurrencies, count2)
		#print (count3 + 1)
		print count
		print content[count].strip()
	        #print time.time() - start_time
		quit()
	final_search = []
	#count +=1
	count2 = 0
    			
    
    
    



