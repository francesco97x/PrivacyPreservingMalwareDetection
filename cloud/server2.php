<?php
ini_set('display_errors', 1);

error_reporting(E_ALL);
/* Si indica allo script di non uscire mentre attende una connessione */
set_time_limit(0);
/* Abilita lo scarico dell'output così si è in grado di vedere cosa passa
 * non appena arrivano i dati al server. */
ob_implicit_flush();

// settaggio variabili, il server ascolta sul proprio indirizzo ip  
$host = "192.168.1.17";
$port = 5002;
// setta timeout!
set_time_limit(1110);
// crea socket
$socket = socket_create(AF_INET, SOCK_STREAM, 0); //or die("Creazione socket fallita\n");
// Lega il socket alla porta $port sul server $host 
$result = socket_bind($socket, $host, $port); //or die("Fallito inizializzazione porta su socket\n");
// Inizio ascolto sulla connessione
$result = socket_listen($socket, 3); //or die("Start ascolto socket fallito\n");
// Accetta Connessioni
// Attende l'arrivo di una connessione client
$spawn = socket_accept($socket); //or die("Inizializzazione connessione con client fallita\n");
// Legge Client input
//$input = socket_read($spawn, 1024) or die("Errore Non riesco a leggere l'input\n");
$fp = fopen("file.tar.gz", "a+");
file_put_contents("file.tar.gz", "");
system('rm -rf -- ' . escapeshellarg("trapdoors"), $retval);
sleep(1);
while(true){
	//echo "aaaa";
	$input = socket_read($spawn, 1024);
	fwrite($fp, $input);
	//echo $input;
    if( $input == false) {
	$phar = new PharData("file.tar.gz");
	$phar->extractTo("/opt/lampp/htdocs/cloud", null, true);
	
	
	break;
    }
}

sleep(1);

$output = system(" python /opt/lampp/htdocs/cloud/sse_search.py");


//Chiudi sockets
socket_close($spawn);
socket_close($socket);
/* INIZIO ULTIMA CONNESSIONE
*
*
*
*
*/
error_reporting(E_ALL);
sleep(1);
$host2 = "192.168.1.17";
$port2 = 5003;
// crea socket
$socket2 = socket_create(AF_INET, SOCK_STREAM, 0); //or die("Socket non creato\n");
// connettiti al server
$result2 = socket_connect($socket2, $host2, $port2); //or die("Impossibile connettersi al server\n");
// invia stringa al server
 
socket_write($socket2, $output); //or die("Impossibile inviare i dati al server\n");
 
	//echo $line;
socket_close($socket2);



 ?>
